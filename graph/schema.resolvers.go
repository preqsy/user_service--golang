package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"
	"user_service/graph/model"
	"user_service/models"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, userData model.NewUser) (*model.UserResponse, error) {
	users := models.User{Name: userData.Name, Email: userData.Email, Password: userData.Password}
	rsp, err := r.service.SaveUser(users)
	if err != nil {
		return nil, fmt.Errorf("Error while saving data %s", err)
	}
	userResponse := model.UserResponse{Email: &rsp.Email, Password: &rsp.Password, Name: &rsp.Name}
	return &userResponse, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
